@model JobTypeEditViewModel

@{
    ViewData["Name"] = "Edit Job Type";
}

<h2>Edit Job Type</h2>

<form asp-action="Edit" method="post" id="editForm">
    <input type="hidden" asp-for="Id" id="JobTypeId" />

    <div class="mb-3">
        <label asp-for="Name" class="form-label">Job Type Name</label>
        <input asp-for="Name" class="form-control" required />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Description" class="form-label">Description</label>
        <textarea asp-for="Description" class="form-control" rows="4" required></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Update Job Type</button>
    <a asp-action="JobTypeIndex" class="btn btn-secondary">Cancel</a>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>

<script type="text/javascript">
    document.getElementById('editForm').addEventListener('submit', function (event) {
        event.preventDefault();
        var formData = new FormData(document.getElementById('editForm'));
        const token = localStorage.getItem('authToken');
        const email = localStorage.getItem("email");
        if (!email) {
            alert("Email not found in localStorage.");
            return;
        }
        const JobTypeId = document.getElementById("JobTypeId").value;

        fetch(`/recruiter/jobtype/${JobTypeId}`, {
            method: 'PUT',
            body: formData,
            headers: {
                'Authorization': `Bearer ${token}`
            },
        })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(data => { throw new Error(data.message || 'Something went wrong') });
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    toastr.success('Successfully update data! Redirecting...', 'Success');
                    setTimeout(function () {
                        window.location.href = '/recruiter/jobtype';
                    }, 1000)
                }
            })
            .catch(error => {
                toastr.error(error.message || 'An error occurred while processing.');
                console.error('Error:', error);
            });
    });
</script>
